import pandas as pd
import plotly.graph_objects as go

def plot_ml_splits_over_time_plotly(
    train: pd.DataFrame,
    test: pd.DataFrame,
    oot: pd.DataFrame = None,
    *,
    date_col: str = "month",
    target_col: str = "target",
    id_col: str = None,
    title: str = "Размеры выборок и уровень таргета по месяцам"
):
    def _prep(df: pd.DataFrame):
        if df is None or len(df) == 0:
            return pd.DataFrame(columns=["month", "cnt", "rr"])
        tmp = df.copy()
        tmp[date_col] = pd.to_datetime(tmp[date_col])
        tmp["month"] = tmp[date_col].dt.to_period("M").dt.to_timestamp()
        if id_col:
            g = tmp.groupby("month").agg(
                cnt=(id_col, "nunique"),
                rr=(target_col, "mean")
            ).reset_index()
        else:
            g = tmp.groupby("month").agg(
                cnt=(target_col, "size"),
                rr=(target_col, "mean")
            ).reset_index()
        return g

    g_train = _prep(train).rename(columns={"cnt": "train_cnt", "rr": "rr_train"})
    g_test  = _prep(test).rename(columns={"cnt": "test_cnt",  "rr": "rr_test"})
    g_oot   = _prep(oot).rename(columns={"cnt": "oot_cnt",   "rr": "rr_oot"})

    df = pd.DataFrame({"month": sorted(
        set(g_train["month"]) | set(g_test["month"]) | set(g_oot["month"])
    )})
    df = df.merge(g_train, on="month", how="left")
    df = df.merge(g_test, on="month", how="left")
    df = df.merge(g_oot, on="month", how="left")

    df = df.fillna(0)

    fig = go.Figure()

    # stacked bars: train + test
    fig.add_bar(x=df["month"], y=df["train_cnt"], name="train_cnt")
    fig.add_bar(x=df["month"], y=df["test_cnt"], name="test_cnt")

    # OOT bars
    if "oot_cnt" in df:
        fig.add_bar(x=df["month"], y=df["oot_cnt"], name="OOT_cnt")

    # RR lines (secondary axis)
    fig.add_trace(go.Scatter(
        x=df["month"], y=df["rr_train"]*100,
        mode="lines+markers", name="RR Train", yaxis="y2"
    ))
    fig.add_trace(go.Scatter(
        x=df["month"], y=df["rr_test"]*100,
        mode="lines+markers", name="RR Test", yaxis="y2"
    ))
    if "rr_oot" in df:
        fig.add_trace(go.Scatter(
            x=df["month"], y=df["rr_oot"]*100,
            mode="lines+markers", name="RR OOT", yaxis="y2", line=dict(dash="dot")
        ))

    fig.update_layout(
        barmode="stack",
        title=title,
        xaxis=dict(title="Месяц"),
        yaxis=dict(title="Количество клиентов"),
        yaxis2=dict(title="RR, %", overlaying="y", side="right"),
        legend=dict(orientation="h", yanchor="bottom", y=1.02, xanchor="right", x=1),
        template="plotly_white"
    )

    fig.show()
    return df, fig
