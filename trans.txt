import pandas as pd
import plotly.graph_objects as go
from typing import Tuple

def plot_counts_and_rate_over_time_plotly(
    data: pd.DataFrame,
    date_col: str,                 # колонка с датой
    target_col: str,               # колонка с таргетом (0/1 или доля)
    title: str = "Размеры и Target rate по месяцам",
    count_series_name: str = "Target count",
    rate_series_name: str = "Target rate",
    show: bool = True
) -> Tuple[pd.DataFrame, "go.Figure"]:
    """Бар по количеству + линия таргета на правой оси. Возвращает (df_agg, fig)."""

    df = data.copy()
    df[date_col] = pd.to_datetime(df[date_col], errors="coerce")
    df = df.dropna(subset=[date_col])

    # месяц = начало месяца
    df["month"] = df[date_col].dt.to_period("M").dt.to_timestamp()

    # count = число строк; rate = среднее target (доля)
    df_agg = (
        df.groupby("month", as_index=False)
          .agg(count=(target_col, "size"), rate=(target_col, "mean"))
          .sort_values("month")
    )

    # подписи: форматируем тысячи пробелами (как в Excel-примере)
    def fmt_thousands(n: float) -> str:
        s = f"{int(round(n)):,}"
        return s.replace(",", " ")

    bar_text  = [fmt_thousands(v) for v in df_agg["count"]]
    line_text = [f"{int(round(r*100))}%" if pd.notna(r) else "" for r in df_agg["rate"]]

    ymax = float(df_agg["count"].max() or 0)
    pad  = ymax * 0.15  # запас сверху, чтобы надписи «outside» не резались

    fig = go.Figure()

    # БАРЫ с подписями сверху
    fig.add_bar(
        x=df_agg["month"], y=df_agg["count"],
        name=count_series_name,
        text=bar_text,
        textposition="outside",      # подписи над столбцами
        textfont=dict(size=12),
        marker=dict(line=dict(width=0)),
    )

    # ЛИНИЯ таргета (правая ось, проценты)
    fig.add_trace(go.Scatter(
        x=df_agg["month"], y=df_agg["rate"],
        mode="lines+markers+text",
        name=rate_series_name,
        yaxis="y2",
        text=line_text,
        textposition="top center",
        line=dict(width=3, color="#D62728"),
        marker=dict(size=8, line=dict(width=1, color="white")),
    ))

    fig.update_layout(
        title=title,
        xaxis=dict(title=None, tickangle=45),
        # верхний запас по оси Y, чтобы видно было подписи «outside»
        yaxis=dict(title="Количество клиентов",
                   tickformat=",.0f",
                   range=[0, ymax + pad]),
        yaxis2=dict(title="RR, %", overlaying="y", side="right", tickformat=".0%"),
        bargap=0.25,
        template="plotly_white",
        legend=dict(orientation="h", yanchor="bottom", y=1.02, xanchor="right", x=1),
        margin=dict(t=70, r=60, b=70, l=70)
    )

    if show:
        fig.show()

    return df_agg, fig
